version: "3.8"
services:
  balance-master:
    build:
      context: .
      dockerfile: ${BALANCE_MASTER_DOCKERFILE:-Dockerfile.balance-master}
      cache_from:
        - golang:1.24
    container_name: balance-master-${INSTANCE_ID:-1}
    ports:
      - "${BALANCE_MASTER_PORT:-8899}:8899"
    environment:
      - DATABASE_URL=sqlite:///root/storage/balance-master.db
      - DOGE_HOST=dogecoin-${INSTANCE_ID:-1}
      - DOGE_PORT=${DOGE_PORT}
      - RPC_SERVER_PORT=${BALANCE_MASTER_PORT}
    depends_on:
      dogecoin:
        condition: service_healthy
    profiles: [deps]
    volumes:
      - sqlite-balance-master-data:/root/storage
    networks:
      default:
        ipv4_address: 192.168.${SUBNET_BASE:-100}.13
      fractal-shared:
  fractalstore:
    build:
      context: .
      dockerfile: Dockerfile.fractalstore
      args:
        POSTGRES_USER: fractalstore
        POSTGRES_PASSWORD: fractalstore
        POSTGRES_DB: fractalstore
    container_name: fractalstore-${INSTANCE_ID:-1}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    environment:
      - POSTGRES_USER=fractalstore
      - POSTGRES_PASSWORD=fractalstore
      - POSTGRES_DB=fractalstore
    volumes:
      - postgres-data:/var/lib/postgresql/data
    profiles: [deps]
    networks:
      default:
        ipv4_address: 192.168.${SUBNET_BASE:-100}.14
      fractal-shared:
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "fractalstore"]
      interval: 10s
      timeout: 5s
      retries: 5
  dogenet:
    profiles: [deps]
    build:
      context: .
      dockerfile: Dockerfile.dogenet
    container_name: dogenet-${INSTANCE_ID:-1}
    environment:
      - DOGE_NET_HANDLER=$DOGE_NET_HANDLER
      - RPC_PORT=${DOGE_PORT}
    ports:
      - "${DOGENET_PORT:-8085}:8085"
      - "${DOGENET_WEB_PORT:-8086}:8086"
    volumes:
      - doge-sock:/tmp
    networks:
      default:
        ipv4_address: 192.168.${SUBNET_BASE:-100}.10
      fractal-shared:
    healthcheck:
      test: ["CMD", "test", "/tmp/dogenet.sock"]
      interval: 10s
      timeout: 5s
      retries: 10
  fractalengine:
    profiles: [fractal]
    build:
      context: .
      dockerfile: Dockerfile.fractalengine
    container_name: fractalengine-${INSTANCE_ID:-1}
    ports:
      - "${FRACTAL_PORT:-8891}:8891"
    environment:
      - DATABASE_URL=sqlite:///root/storage/fractal-engine.
      - DOGE_NET_ADDRESS=${DOGE_NET_ADDRESS}
      - DOGE_NET_NETWORK=${DOGE_NET_NETWORK}
      - DOGE_PORT=${DOGE_PORT}
      - FRACTAL_PORT=${FRACTAL_PORT}
    depends_on:
      dogecoin:
        condition: service_healthy
      dogenet:
        condition: service_healthy
      fractalstore:
        condition: service_healthy
    volumes:
      - doge-sock:/tmp
      - sqlite-fractalengine-data:/root/storage
    networks:
      default:
        ipv4_address: 192.168.${SUBNET_BASE:-100}.11
      fractal-shared:
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "--silent",
          "content-type: text/plain;",
          "http://127.0.0.1:${FRACTAL_PORT}/health",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
  dogecoin:
    profiles: [deps]
    build:
      context: .
      dockerfile: Dockerfile.dogecoin
    container_name: dogecoin-${INSTANCE_ID:-1}
    environment:
      - RPC_PORT=${DOGE_PORT}
    networks:
      default:
        ipv4_address: 192.168.${SUBNET_BASE:-100}.12
      fractal-shared:
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "--silent",
          "--user",
          "test:test",
          "--data-binary",
          '{"jsonrpc":"1.0","id":"curltest","method":"getblockchaininfo","params":[]}',
          "-H",
          "content-type: text/plain;",
          "http://127.0.0.1:${DOGE_PORT}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  sqlite-data:
    driver: local
  doge-sock:
    driver: local
  sqlite-fractalengine-data:
    driver: local
  sqlite-balance-master-data:
    driver: local
  postgres-data:
    driver: local

networks:
  default:
    enable_ipv6: false
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: ${SUBNET:-192.168.100.0/24}
  fractal-shared:
    external: true
